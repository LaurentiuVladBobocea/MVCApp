@model StaticWebsite.Models.Employee

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
   
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
<div>
    @using (Html.BeginForm("Create", "Content", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <input type="file" name="ImageData" id="ImageData" onchange="fileCheck(this);" />
    }
</div>
  
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Intro, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Intro, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Intro, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.socialMedia.Facebook, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.socialMedia.Facebook, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.socialMedia.Facebook, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.socialMedia.Google, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.socialMedia.Google, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.socialMedia.Google, "", new { @class = "text-danger" })
        </div>
    </div><div class="form-group">
        @Html.LabelFor(model => model.socialMedia.Twitter, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.socialMedia.Twitter, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.socialMedia.Twitter, "", new { @class = "text-danger" })
        </div>
    </div><div class="form-group">
        @Html.LabelFor(model => model.socialMedia.LinkedIn, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.socialMedia.LinkedIn, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.socialMedia.LinkedIn, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "ManageEmployees")
</div>
